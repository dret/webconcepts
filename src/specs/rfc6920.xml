<?xml version="1.0" encoding="UTF-8" ?>
<service primary="IETF" secondary="RFC" id="6920">
    <title>Naming Things with Hashes</title>
    <documentation source="https://datatracker.ietf.org/doc/html/rfc6920">This document defines a set of ways to identify a thing (a digital object in this case) using the output from a hash function. It specifies a new URI scheme for this purpose, a way to map these to HTTP URLs, and binary and human-speakable formats for these names. The various formats are designed to support, but not require, a strong link to the referenced object, such that the referenced object may be authenticated to the same degree as the reference to it. The reason for this work is to standardise current uses of hash outputs in URLs and to support new information-centric applications and other uses of hash outputs in protocols.</documentation>
    <well-known-uri def="ni">
        <documentation source="https://datatracker.ietf.org/doc/html/rfc6920#section-4">We define a mapping between URIs following the ni URI scheme and HTTP or HTTPS URLs that makes use of the .well-known URI by defining an "ni" suffix.</documentation>
    </well-known-uri>
    <uri-scheme def="ni">
        <documentation source="https://datatracker.ietf.org/doc/html/rfc6920#section-3">A Named Identifier can be represented using the ni URI scheme that we specifically define for the name. However it is represented, the Named Identifier *names* a resource, and the mechanism used to dereference the name and to *locate* the named resource needs to be known by the entity that dereferences it.</documentation>
    </uri-scheme>
    <uri-scheme def="nih">
        <documentation source="https://datatracker.ietf.org/doc/html/rfc6920#section-7">Fields in nih URIs are separated by a semicolon (;) character. The first field is a hash algorithm string, as in the ni URI format.</documentation>
    </uri-scheme>
</service>