<?xml version="1.0" encoding="UTF-8" ?>
<service primary="IETF" secondary="RFC" id="3253">
    <title>Versioning Extensions to WebDAV (Web Distributed Authoring and Versioning)</title>
    <documentation source="https://datatracker.ietf.org/doc/html/rfc3253">This document specifies a set of methods, headers, and resource types that define the WebDAV (Web Distributed Authoring and Versioning) versioning extensions to the HTTP/1.1 protocol. WebDAV versioning will minimize the complexity of clients that are capable of interoperating with a variety of versioning repository managers, to facilitate widespread deployment of applications capable of utilizing the WebDAV Versioning services. WebDAV versioning includes automatic versioning for versioning-unaware clients, version history management, workspace management, baseline management, activity management, and URL namespace versioning.</documentation>
    <http-header def="Label">
        <documentation source="https://datatracker.ietf.org/doc/html/rfc3253#section-8.3">For certain methods (e.g. GET, PROPFIND), if the request-URL identifies a version-controlled resource, a label can be specified in a Label request header to cause the method to be applied to the version selected by that label from the version history of that version-controlled resource.</documentation>
    </http-header>
    <http-method def="VERSION-CONTROL">
        <documentation source="https://datatracker.ietf.org/doc/html/rfc3253#section-3.5">A VERSION-CONTROL request can be used to create a version-controlled resource at the request-URL. It can be applied to a versionable resource or to a version-controlled resource.</documentation>
    </http-method>
    <http-method def="REPORT">
        <documentation source="https://datatracker.ietf.org/doc/html/rfc3253#section-3.6">A REPORT request is an extensible mechanism for obtaining information about a resource. Unlike a resource property, which has a single value, the value of a report can depend on additional information specified in the REPORT request body and in the REPORT request headers.</documentation>
    </http-method>
    <http-method def="CHECKOUT">
        <documentation source="https://datatracker.ietf.org/doc/html/rfc3253#section-4.3">A CHECKOUT request can be applied to a checked-in version-controlled resource to allow modifications to the content and dead properties of that version-controlled resource.</documentation>
    </http-method>
    <http-method def="CHECKIN">
        <documentation source="https://datatracker.ietf.org/doc/html/rfc3253#section-4.4">A CHECKIN request can be applied to a checked-out version-controlled resource to produce a new version whose content and dead properties are copied from the checked-out resource.</documentation>
    </http-method>
    <http-method def="UNCHECKOUT">
        <documentation source="https://datatracker.ietf.org/doc/html/rfc3253#section-4.5">An UNCHECKOUT request can be applied to a checked-out version-controlled resource to cancel the CHECKOUT and restore the pre-CHECKOUT state of the version-controlled resource.</documentation>
    </http-method>
    <http-method def="MKWORKSPACE">
        <documentation source="https://datatracker.ietf.org/doc/html/rfc3253#section-6.3">A MKWORKSPACE request creates a new workspace resource. A server MAY restrict workspace creation to particular collections, but a client can determine the location of these collections from a DAV:workspace-collection-set OPTIONS request.</documentation>
    </http-method>
    <http-method def="UPDATE">
        <documentation source="https://datatracker.ietf.org/doc/html/rfc3253#section-7.1">The UPDATE method modifies the content and dead properties of a checked-in version-controlled resource (the "update target") to be those of a specified version (the "update source") from the version history of that version-controlled resource.</documentation>
    </http-method>
    <http-method def="LABEL">
        <documentation source="https://datatracker.ietf.org/doc/html/rfc3253#section-8.2">A LABEL request can be applied to a version to modify the labels that select that version. The case of a label name MUST be preserved when it is stored and retrieved. When comparing two label names to decide if they match or not, a server SHOULD use a case-sensitive URL-escaped UTF-8 encoded comparison of the two label names.</documentation>
    </http-method>
    <http-method def="MERGE">
        <documentation source="https://datatracker.ietf.org/doc/html/rfc3253#section-11.2">The MERGE method performs the logical merge of a specified version (the "merge source") into a specified version-controlled resource (the "merge target"). If the merge source is neither an ancestor nor a descendant of the DAV:checked-in or DAV:checked-out version of the merge target, the MERGE checks out the merge target (if it is not already checked out) and adds the URL of the merge source to the DAV:merge-set of the merge target.</documentation>
    </http-method>
    <http-method def="BASELINE-CONTROL">
        <documentation source="https://datatracker.ietf.org/doc/html/rfc3253#section-12.6">A collection can be placed under baseline control with a BASELINE-CONTROL request. When a collection is placed under baseline control, the DAV:version-controlled-configuration property of the collection is set to identify a new version-controlled configuration. This version-controlled configuration can be checked out and then checked in to create a new baseline for that collection.</documentation>
    </http-method>
    <http-method def="MKACTIVITY">
        <documentation source="https://datatracker.ietf.org/doc/html/rfc3253#section-13.5">A MKACTIVITY request creates a new activity resource. A server MAY restrict activity creation to particular collections, but a client can determine the location of these collections from a DAV:activity-collection-set OPTIONS request.</documentation>
    </http-method>
</service>